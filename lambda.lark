programm: (_NEWLINE* expr _NEWLINE*)*

expr: "(" expr ")" -> bracket_expr
    | value
    | var_name
    | expr expr
    | lambd
    | infix
    | assign
    | import

lambd: "\\" arguments "." body
!body: expr

infix: expr infix_operator expr
    | expr "`" var_name "`" expr
infix_operator.2: OPERATOR

assign: "let" var_name arguments "=" expr

import: "import" dotted_varname
dotted_varname: strict_varname
                | strict_varname "." dotted_varname
strict_varname: "`" infix_operator "`" | var_name

arguments: NAME*

!var_name: NAME | OPERATOR
!value: number
        | string
!number: DEC_NUMBER | HEX_NUMBER | OCT_NUMBER | BIN_NUMBER | FLOAT_NUMBER | IMAG_NUMBER
!string: STRING | LONG_STRING

OPERATOR: "**"|"::"|"=="|"!="|">="|"<="|"+"|"-"|"*"|"/"|"^"|"|"|"%"|"@"|"&"|"$"|":"|"?"|">"|"<"

_NEWLINE: ( /\r?\n[\t ]*/ | COMMENT )+

%import python (NAME, COMMENT, STRING, LONG_STRING)
%import python (DEC_NUMBER, HEX_NUMBER, OCT_NUMBER, BIN_NUMBER, FLOAT_NUMBER, IMAG_NUMBER)

%ignore /[\t \f]+/  // WS
%ignore /\\[\t \f]*\r?\n/   // LINE_CONT
%ignore COMMENT
